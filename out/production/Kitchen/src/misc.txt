package src;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class ConnectionDB {
    private Connection connection;

    public ConnectionDB(String url, String username, String password) {
        try {
            connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to the database!");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void executeQuery(String query) {
        try (Statement statement = connection.createStatement()) {
            statement.executeUpdate(query);
            System.out.println("Query executed successfully!");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void closeConnection() {
        try {
            if (connection != null) {
                connection.close();
                System.out.println("Connection closed.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void addStock(String itemName, int quantity) {
        String query = "INSERT INTO inventory (itemName, quantity) VALUES ('" + itemName + "', " + quantity + ")";
        executeQuery(query);
    }

    public void removeStock(String itemName, int quantity) {
        String query = "UPDATE inventory SET quantity = quantity - " + quantity + " WHERE itemName = '" + itemName + "'";
        executeQuery(query);
    }

    public void addIngredient(String itemName, int quantity) {
        addStock(itemName, quantity); // Since adding an ingredient is similar to adding stock
    }

    public void removeIngredient(String itemName, int quantity) {
        removeStock(itemName, quantity); // Since removing an ingredient is similar to removing stock
    }

    public static void main(String[] args) {
        String url = "jdbc:mysql://smcse-stuproj00.city.ac.uk:3306/in2033t14_d";
        String username = "in2033t14_a";
        String password = "aXTxNVC3GrQ";

        Scanner scanner = new Scanner(System.in);
        System.out.print("Please enter the item name: ");
        String itemName = scanner.nextLine();

        int quantity = 0;
        boolean validInput = false;
        while (!validInput) {
            System.out.print("Please enter the quantity: ");
            try {
                quantity = scanner.nextInt();
                validInput = true;
            } catch (java.util.InputMismatchException e) {
                System.out.println("Invalid input. Please enter a valid integer.");
            }
        }
        scanner.close();

        ConnectionDB db = new ConnectionDB(url, username, password);
        db.addStock(itemName, quantity);
        db.closeConnection();
    }
}


public class Dish extends DishConctruct {
    // Class variables
    private int id;
    private String dishName;
    private int price;
    private String photoPath;
    private String feedback;




    // Getters and setters for class variables
    public int getId() {
        return id;
    }
    public void setId(int id) {
        this.id = id;
    }
    public String getDishName() {
        return dishName;
    }
    public void setDishName(String dishName) {
        this.dishName = dishName;
    }
    public int getPrice() {
        return price;
    }
    public void setPrice(int price) {
        this.price = price;
    }
    public String getPhotoPath() {
        return photoPath;
    }
    public void setPhoto(String photoPath) {
        this.photoPath = photoPath;
    }
    public String getFeedback() {
        return feedback;
    }
    public void setFeedback(String feedback) {
        this.feedback = feedback;
    }

}